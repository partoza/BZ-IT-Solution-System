@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    html {
        font-family: 'Instrument Sans', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
            'Segoe UI Symbol', 'Noto Color Emoji';
    }
    
    body {
        @apply text-dark;
    }
}

@layer components {
  .global-focus input:focus,
  .global-focus textarea:focus,
  .global-focus select:focus,
  .global-focus button:focus,
  .global-focus input:focus-visible,
  .global-focus textarea:focus-visible,
  .global-focus select:focus-visible,
  .global-focus button:focus-visible {
    @apply outline-none ring-1 ring-primary border-primary;
  }
}

/* Animations */
@layer utilities {
    @keyframes fade-in-up {
        from { opacity: 0; transform: translateY(8px); }
        to   { opacity: 1; transform: translateY(0); }
    }

    @keyframes float {
        0% { transform: translateY(0); }
        50% { transform: translateY(-6px); }
        100% { transform: translateY(0); }
    }

    @keyframes pulse-check {
        0% { box-shadow: 0 0 0 0 rgba(47,125,109,0.35); }
        70% { box-shadow: 0 0 0 8px rgba(47,125,109,0); }
        100% { box-shadow: 0 0 0 0 rgba(47,125,109,0); }
    }

    .animate-fade-in-up { animation: fade-in-up 420ms cubic-bezier(.22,.9,.3,1) both; }
    .animate-float { animation: float 3.2s ease-in-out infinite; }
    .animate-pulse-check { animation: pulse-check 900ms ease-out; }

    /* subtle wave translate for footer SVG */
    .animate-wave-shift { animation: float 4s ease-in-out infinite; }

    /* horizontal wave movement for SVG paths */
    @keyframes wave-horizontal {
        0% { transform: translateX(0); }
        50% { transform: translateX(-8px); }
        100% { transform: translateX(0); }
    }

    .animate-wave-horizontal { animation: wave-horizontal 6s ease-in-out infinite; transform-origin: center; }

    /* stagger helpers */
    .ani-delay-100 { animation-delay: 100ms; }
    .ani-delay-200 { animation-delay: 200ms; }
    .ani-delay-300 { animation-delay: 300ms; }
    .ani-delay-400 { animation-delay: 400ms; }

        @keyframes slide-left {
            from { opacity: 0; transform: translateX(8px); }
            to { opacity: 1; transform: translateX(0); }
        }

        @keyframes scale-up {
            from { opacity: 0; transform: scale(.98); }
            to { opacity: 1; transform: scale(1); }
        }

        @keyframes pop {
            0% { transform: scale(.95); opacity: 0; }
            60% { transform: scale(1.02); opacity: 1; }
            100% { transform: scale(1); opacity: 1; }
        }

        @keyframes input-glow {
            from { box-shadow: 0 0 0 0 rgba(47,125,109,0); }
            to { box-shadow: 0 6px 20px -8px rgba(47,125,109,0.45); }
        }

        .animate-slide-left { animation: slide-left 420ms ease both; }
        .animate-scale-up { animation: scale-up 380ms cubic-bezier(.2,.9,.3,1) both; }
        .animate-pop { animation: pop 420ms cubic-bezier(.2,.9,.3,1) both; }
        .animate-input-glow { animation: input-glow 420ms ease both; }

            @keyframes fade {
                from { opacity: 0; transform: translateY(6px); }
                to { opacity: 1; transform: translateY(0); }
            }

            .animate-fade { animation: fade 420ms ease both; }
            .animate-fade-slow { animation: fade 680ms ease both; }
}

        /* Professional reusable fade utilities */
        @layer utilities {
            @keyframes professional-fade {
                from { opacity: 0; transform: translateY(10px) scale(.995); }
                to   { opacity: 1; transform: translateY(0) scale(1); }
            }

            .ani-fade { animation: professional-fade 540ms cubic-bezier(.22,.9,.3,1) both; animation-delay: var(--ani-delay, 0ms); }
            .ani-fade-slow { animation-duration: 820ms; }
            .ani-pop { animation: pop 420ms cubic-bezier(.2,.9,.3,1) both; animation-delay: var(--ani-delay, 0ms); }

            /* Respect reduced motion preferences */
            @media (prefers-reduced-motion: reduce) {
                .ani-fade,
                .ani-fade-slow,
                .ani-pop,
                .animate-fade,
                .animate-fade-slow,
                .animate-fade-in-up,
                .animate-slide-left,
                .animate-scale-up,
                .animate-pop,
                .animate-float,
                .animate-wave-shift {
                    animation: none !important;
                }

                /* Custom select component
                     Usage:
                     <div class="custom-select">
                         <select class="custom-select-select">...</select>
                         <span class="custom-select-icon">▾</span>
                     </div>

                     The icon is positioned at the end with the same horizontal padding as select text.
                     On focus the icon rotates with a smooth transition.
                */
            }
        }

/* Custom select component */
.custom-select {
    position: relative;
    display: block;
    width: 100%;
}

/* horizontal padding used by your Tailwind px-3 = 0.75rem */
.custom-select-select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 100%;
    padding-left: 0.75rem; /* same left padding */
    /* reserve space on the right for the icon (0.75rem + icon width ~1.25rem) */
    padding-right: calc(0.75rem + 1.25rem);
    background-color: transparent;
    border: none; /* keep border via utility class on wrapper if needed */
    line-height: 1.5;
}

/* If you keep Tailwind border classes on select, you can remove border:none above. */

/* Icon placed at the same horizontal distance from the right border as text from left */
.custom-select-icon {
    position: absolute;
    right: 0.75rem;          /* same inset as select text left padding */
    top: 50%;
    transform: translateY(-50%) rotate(0deg) scale(1);
    transform-origin: center;
    transition: transform 220ms cubic-bezier(.2,.9,.3,1), color 160ms;
    pointer-events: none;    /* clicks pass to select */
    color: rgba(55,65,81,1); /* text-gray-700 fallback */
    font-size: 0.95rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

/* Open / clicked state — rotate + enlarge the icon */
.custom-select.is-open .custom-select-icon {
    transform: translateY(-50%) rotate(180deg) scale(1.25);
    color: #2563eb; /* primary, adjust to your variable if needed */
}

/* Keep accessibility: focus ring on select itself */
.custom-select-select:focus {
    outline: none;
}

/* Disabled state */
.custom-select-select:disabled + .custom-select-icon,
.custom-select-select:disabled {
    opacity: .5;
    cursor: not-allowed;
}
